name: Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16' # Use your preferred Node version

      - name: Install dependencies
        run: npm install

      - name: Start the server (if applicable)
        run: nohup npm start &
        env:
          DB_HOST_SUPERBASE: ${{ secrets.DB_HOST_SUPERBASE }}
          DB_PORT_SUPERBASE: ${{ secrets.DB_PORT_SUPERBASE }}
          DB_DATABASE_SUPERBASE: ${{ secrets.DB_DATABASE_SUPERBASE }}
          DB_USER_SUPERBASE: ${{ secrets.DB_USER_SUPERBASE }}
          DB_PASSWORD_SUPERBASE: ${{ secrets.DB_PASSWORD_SUPERBASE }}
  
      - name: Wait for server to be ready
        run: sleep 10
          
      - name: Check server health
        run: curl https://music-app-glen-413936355529.europe-west1.run.app/
  
      # - name: Trigger Render Deployment
      #   env:
      #     RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
      #   run: |
      #     # Define the Render API endpoint and service ID
      #     SERVICE_ID=srv-cstl09u8ii6s73fk1icg
      #     RENDER_API_URL="https://api.render.com/v1/services/srv-cstl09u8ii6s73fk1icg/deploys"
      #     # Trigger the deployment using Render's API
      #     curl -X POST \
      #       -H "Accept: application/json" \
      #       -H "Authorization: Bearer $RENDER_API_KEY" \
      #       $RENDER_API_URL

      - name: "Docker push and deploy app on Google Cloud Run"

  deploy:
    name: Setup Gcloud Account and Deploy the application on google cloud
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_IMAGE_REPOSITORY_NAME}}

    steps:
    - name: Print image tag
      run: echo $GITHUB_RUN_ID
    - name: Login To GCP
      uses: google-github-actions/setup-gcloud@v0
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_email: ${{ secrets.GCP_EMAIL }}
        service_account_key: ${{ secrets.GCP_CREDENTIALS }}

    - name: Configure Docker
      run: gcloud auth configure-docker --quiet

    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Build Docker image
      run: docker build . -t $IMAGE_NAME:$GITHUB_RUN_ID

    - name: Push Docker image
      run: docker push $IMAGE_NAME:$GITHUB_RUN_ID

    - name: Deploy Docker image
      run: gcloud run deploy ${{ secrets.GCP_INSTANCE_ID }} --image $IMAGE_NAME:$GITHUB_RUN_ID --allow-unauthenticated --port ${{ secrets.GCP_APP_PORT }} --region us-central1 --platform managed
