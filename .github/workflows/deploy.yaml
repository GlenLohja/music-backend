name: Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16' # Use your preferred Node version

      - name: Install dependencies
        run: npm install

      - name: Start the server (if applicable)
        run: nohup npm start &
        env:
          DB_HOST_SUPERBASE: ${{ secrets.DB_HOST_SUPERBASE }}
          DB_PORT_SUPERBASE: ${{ secrets.DB_PORT_SUPERBASE }}
          DB_DATABASE_SUPERBASE: ${{ secrets.DB_DATABASE_SUPERBASE }}
          DB_USER_SUPERBASE: ${{ secrets.DB_USER_SUPERBASE }}
          DB_PASSWORD_SUPERBASE: ${{ secrets.DB_PASSWORD_SUPERBASE }}
  
      - name: Wait for server to be ready
        run: sleep 10
          
      - name: Check server health
        run: curl https://music-app-glen-413936355529.europe-west1.run.app/
        env:
          IMAGE_NAME: gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_IMAGE_REPOSITORY_NAME }}

      - name: Login To GCP
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_email: ${{ secrets.GCP_EMAIL }}
          service_account_key: ${{ secrets.GCP_CREDENTIALS }}

      - name: Configure Docker
        run: gcloud auth configure-docker --quiet

      - name: Build Docker image
        run: docker build . -t $IMAGE_NAME:$GITHUB_RUN_ID

      - name: Push Docker image
        run: docker push $IMAGE_NAME:$GITHUB_RUN_ID

      - name: Deploy Docker image
        run: gcloud run deploy ${{ secrets.GCP_INSTANCE_ID }} \
              --image $IMAGE_NAME:$GITHUB_RUN_ID \
              --allow-unauthenticated \
              --port ${{ secrets.GCP_APP_PORT }} \
              --region europe-west1 \
              --platform managed